@model IEnumerable<Zdrav_I_SIlen.Models.Cart>
@{
    ViewData["Title"] = "Количка";
    decimal total = Model?.Sum(item => item.TotalPrice) ?? 0;
}

@Html.AntiForgeryToken()

<div class="container">
    <h1 class="text-center mb-5">@ViewData["Title"]</h1>
    
    @if (Model != null && Model.Any())
    {
        <div class="row">
            <div class="col-md-8">
                <div class="card">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h5 class="mb-0">Продукти в количката</h5>
                        <button class="btn btn-outline-danger btn-sm clear-cart">
                            <i class="bi bi-trash"></i> Изчисти количката
                        </button>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table class="table">
                                <thead>
                                    <tr>
                                        <th>Продукт</th>
                                        <th>Цена</th>
                                        <th>Количество</th>
                                        <th>Общо</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model)
                                    {
                                        <tr>
                                            <td>
                                                <div class="d-flex align-items-center">
                                                    @if (!string.IsNullOrEmpty(item.Image))
                                                    {
                                                        <img src="@item.Image" alt="@item.Name" class="img-thumbnail" style="width: 50px; margin-right: 10px;">
                                                    }
                                                    <span>@item.Name</span>
                                                </div>
                                            </td>
                                            <td>@item.Price.ToString("C")</td>
                                            <td>
                                                <div class="input-group" style="width: 150px; min-width: 150px;">
                                                    <button class="btn btn-outline-secondary decrease-quantity" type="button" data-cart-id="@item.Id" style="padding: 0.375rem 0.5rem;">-</button>
                                                    <input type="number" class="form-control text-center quantity-input" value="@item.Quantity" min="1" max="1000" data-cart-id="@item.Id" style="padding: 0.375rem 0.25rem; min-width: 60px;">
                                                    <button class="btn btn-outline-secondary increase-quantity" type="button" data-cart-id="@item.Id" style="padding: 0.375rem 0.5rem;">+</button>
                                                </div>
                                            </td>
                                            <td><strong>@item.TotalPrice.ToString("C")</strong></td>
                                            <td>
                                                <button class="btn btn-danger btn-sm remove-item" data-cart-id="@item.Id">
                                                    <i class="bi bi-trash"></i>
                                                </button>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="col-md-4">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">Обобщение на поръчката</h5>
                        <div class="d-flex justify-content-between mb-2">
                            <span>Междинна сума:</span>
                            <span>@total.ToString("C")</span>
                        </div>
                        <div class="d-flex justify-content-between mb-2">
                            <span>Доставка:</span>
                            <span>Безплатна</span>
                        </div>
                        <hr>
                        <div class="d-flex justify-content-between mb-3">
                            <strong>Общо:</strong>
                            <strong>@total.ToString("C")</strong>
                        </div>
                        <button class="btn btn-primary w-100 mb-2">Приключи поръчката</button>
                        <a asp-controller="Products" asp-action="Index" class="btn btn-outline-primary w-100">Продължи пазаруването</a>
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="text-center">
            <h3>Вашата количка е празна</h3>
            <p>Разгледайте нашите продукти и добавете нещо в количката.</p>
            <a asp-controller="Products" asp-action="Index" class="btn btn-primary">Разгледай продуктите</a>
        </div>
    }
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Get anti-forgery token
            var token = $('input[name="__RequestVerificationToken"]').val();
            
            $('.decrease-quantity').click(function() {
                var input = $(this).siblings('.quantity-input');
                var value = parseInt(input.val());
                if (value > 1) {
                    input.val(value - 1).trigger('change');
                }
            });

            $('.increase-quantity').click(function() {
                var input = $(this).siblings('.quantity-input');
                var value = parseInt(input.val());
                if (value < 1000) {
                    input.val(value + 1).trigger('change');
                }
            });

            $('.quantity-input').change(function() {
                var cartId = $(this).data('cart-id');
                var quantity = $(this).val();
                
                $.ajax({
                    url: '@Url.Action("UpdateQuantity", "Cart")',
                    type: 'POST',
                    data: {
                        cartId: cartId,
                        quantity: quantity,
                        __RequestVerificationToken: token
                    },
                    beforeSend: function() {
                        // Disable input during request
                        $('.quantity-input[data-cart-id="' + cartId + '"]').prop('disabled', true);
                    },
                    success: function(response) {
                        if (response.success) {
                            // Reload the page to show updated totals
                            location.reload();
                        }
                    },
                    error: function() {
                        alert('Възникна грешка при актуализиране на количеството.');
                        location.reload();
                    },
                    complete: function() {
                        // Re-enable input
                        $('.quantity-input[data-cart-id="' + cartId + '"]').prop('disabled', false);
                    }
                });
            });

            $('.remove-item').click(function() {
                var cartId = $(this).data('cart-id');
                
                if (confirm('Сигурни ли сте, че искате да премахнете този продукт от количката?')) {
                    $.ajax({
                        url: '@Url.Action("RemoveItem", "Cart")',
                        type: 'POST',
                        data: {
                            cartId: cartId,
                            __RequestVerificationToken: token
                        },
                        beforeSend: function() {
                            // Disable button during request
                            $('.remove-item[data-cart-id="' + cartId + '"]').prop('disabled', true);
                        },
                        success: function(response) {
                            if (response.success) {
                                // Reload the page to show updated cart
                                location.reload();
                            }
                        },
                        error: function() {
                            alert('Възникна грешка при премахване на продукта.');
                            location.reload();
                        }
                    });
                }
            });

            // Add clear cart functionality
            $('.clear-cart').click(function() {
                if (confirm('Сигурни ли сте, че искате да изчистите цялата количка?')) {
                    $.ajax({
                        url: '@Url.Action("Clear", "Cart")',
                        type: 'POST',
                        data: {
                            __RequestVerificationToken: token
                        },
                        success: function() {
                            location.reload();
                        },
                        error: function() {
                            alert('Възникна грешка при изчистване на количката.');
                        }
                    });
                }
            });
        });
    </script>
} 